AWSTemplateFormatVersion: 2010-09-09
Description: Creates Pipeline for TaskCat CI.
Parameters:
  GitHubUser:
    Description: Enter GitHub username of the repository owner
    Type: String
  GitHubRepoName:
    Description: Enter the repository name that should be monitored for changes
    Type: String
  SourceRepoBranch:
    Description: Enter the branch name to be monitored
    Type: String
    Default: main
  ArtifactBucket:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Description: S3 bucket name used to store build artifacts.
    Type: String
  CodeBuildRoleArn:
    Description: Code Build service role ARN
    Type: String
  StepFunctionsArn:
    Description: Step Functions service role ARN
    Type: String
Resources:
  CodeBuild:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Description: !Sub 'Submit build jobs for ${GitHubRepoName} as part of CI/CD pipeline'
      ServiceRole: !Ref CodeBuildRoleArn
      Artifacts:
        Type: S3
        Location: !Sub '${ArtifactBucket}'
        Name: cfnrepo.zip
        Packaging: ZIP
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: ARTIFACT_BUCKET
            Value: !Ref ArtifactBucket
      SourceVersion: !Ref SourceRepoBranch
      Source:
        Auth: 
          Type: OAUTH
        Type: GITHUB
        Location: !Sub 'https://github.com/${GitHubUser}/${GitHubRepoName}.git'
        BuildSpec: !Sub | 
          version: 0.2
          phases:
            install:
              commands:
                - yum install jq util-linux
                - curl -L https://github.com/bronze1man/yaml2json/releases/download/v1.3/yaml2json_linux_amd64 > yaml2json
                - chmod +x yaml2json
                - if [ -r pipeline.yaml ]; then ./yaml2json pipeline.yaml > pipeline.json; fi
            build:
              commands:
                - echo Entered the build phase...
                - START_TIME=$(date +%s)
                - HEX_TIME=$(printf '%x\n' $START_TIME)
                - GUID=$(uuidgen -r |tr -d -)
                - TRACE_ID="1-$HEX_TIME-$GUID"
                - CDKProject=$( jq -r '.cfnpipeline | tostring' cfnpipeline.json )
                - aws stepfunctions start-execution --state-machine-arn ${CodeBuildStateMachine} --input $CDKProject --trace-header $TRACE_ID
          artifacts:
            files:
              - '**/*'
  CFNProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: A CodeBuild Project that runs cfn-lint,cfn-guard or CDK Commands
      ServiceRole: !Ref CodeBuildRoleArn
      Artifacts:
        Type: S3
        Location: !Sub '${ArtifactBucket}'
        Name: cfnrepo.zip
        Packaging: ZIP
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
      Source:
        Type: S3
        Location: !Sub '${ArtifactBucket}/cfnrepo.zip'
        BuildSpec: cfnlintspec.yml
      TimeoutInMinutes: 10
  StatesLogGroup: 
    Type: AWS::Logs::LogGroup
    Properties: 
      RetentionInDays: 7
  SNSTopic:
    Type: AWS::SNS::Topic
  CodeBuildStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !Ref StepFunctionsArn
      TracingConfiguration:
        Enabled: true
      LoggingConfiguration:
        Destinations: 
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt StatesLogGroup.Arn
        IncludeExecutionData: true
        Level: ALL
      DefinitionString:
        !Sub
          - |-
            {
              "Comment": "An example of using CodeBuild to run tests, get test results and send a notification.",
              "StartAt": "CDK Project?",
              "States": {
                "CDK Project?": {
                  "Type": "Choice",
                  "Choices": [
                    {
                      "Variable": "$.cdkproject",
                      "StringEquals": "true",
                      "Next": "CDK Synth"
                    }
                  ],
                  "Default": "Run Linting"
                },
                "CDK Synth": {
                  "Type": "Task",
                  "Resource": "arn:${AWS::Partition}:states:::codebuild:startBuild.sync",
                  "Parameters": {
                    "ProjectName": "${cfnProject}",
                    "BuildspecOverride": "specfiles/cdksynthspec.yml"
                  },
                  "Next": "Run Linting"
                },
                "Run Linting": {
                  "Type": "Task",
                  "Resource": "arn:${AWS::Partition}:states:::codebuild:startBuild.sync",
                  "Parameters": {
                    "ProjectName": "${cfnProject}"
                  },
                  "Next": "Lint Tests Passed?"
                },
                "Lint Tests Passed?": {
                  "Type": "Choice",
                  "Choices": [
                    {
                      "Variable": "$.Build.BuildStatus",
                      "StringEquals": "SUCCEEDED",
                      "Next": "Run Compliance Check"
                    }
                  ],
                  "Default": "Notify Failure"
                },
                "Run Compliance Check": {
                  "Type": "Task",
                  "Resource": "arn:${AWS::Partition}:states:::codebuild:startBuild.sync",
                  "Parameters": {
                    "ProjectName": "${cfnProject}",
                    "BuildspecOverride": "cfnguardspec.yml"
                  },
                  "Next": "Guard Tests Passed?"
                },
                "Guard Tests Passed?": {
                  "Type": "Choice",
                  "Choices": [
                    {
                      "Variable": "$.Build.BuildStatus",
                      "StringEquals": "SUCCEEDED",
                      "Next": "SuccessState"
                    }
                  ],
                  "Default": "Notify Failure"
                },
                "SuccessState": {
                  "Type": "Succeed"
                },
                "Notify Failure": {
                  "Type": "Task",
                  "Resource": "arn:${AWS::Partition}:states:::sns:publish",
                  "Parameters": {
                    "Message": "CodeBuild build tests failed",
                    "TopicArn": "${snsTopicArn}"
                  },
                  "End": true
                }
              }
            }
          - {snsTopicArn: !Ref SNSTopic, cfnProject: !Ref CFNProject }
